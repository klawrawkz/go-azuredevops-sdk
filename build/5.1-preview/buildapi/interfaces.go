package buildapi

// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"context"
	"github.com/Azure/go-autorest/autorest"
	"github.com/Azure/go-autorest/autorest/date"
	"github.com/satori/go.uuid"
)

// BaseClientAPI contains the set of methods on the BaseClient type.
type BaseClientAPI interface {
	AddBuildTag(ctx context.Context, organization string, project string, buildID int32, tag string) (result build.ListString, err error)
	AddBuildTags(ctx context.Context, organization string, body []string, project string, buildID int32) (result build.ListString, err error)
	AddDefinitionTag(ctx context.Context, organization string, project string, definitionID int32, tag string) (result build.ListString, err error)
	AddDefinitionTags(ctx context.Context, organization string, body []string, project string, definitionID int32) (result build.ListString, err error)
	AuthorizeDefinitionResources(ctx context.Context, organization string, body []build.DefinitionResourceReference, project string, definitionID int32) (result build.ListDefinitionResourceReference, err error)
	AuthorizeProjectResources(ctx context.Context, organization string, body []build.DefinitionResourceReference, project string) (result build.ListDefinitionResourceReference, err error)
	CreateArtifact(ctx context.Context, organization string, body build.Artifact, project string, buildID int32) (result build.Artifact, err error)
	CreateDefinition(ctx context.Context, organization string, body build.Definition, project string, definitionToCloneID *int32, definitionToCloneRevision *int32) (result build.Definition, err error)
	CreateFolder(ctx context.Context, organization string, body build.Folder, project string, pathParameter string) (result build.Folder, err error)
	DeleteBuild(ctx context.Context, organization string, project string, buildID int32) (result autorest.Response, err error)
	DeleteBuildTag(ctx context.Context, organization string, project string, buildID int32, tag string) (result build.ListString, err error)
	DeleteDefinition(ctx context.Context, organization string, project string, definitionID int32) (result autorest.Response, err error)
	DeleteDefinitionTag(ctx context.Context, organization string, project string, definitionID int32, tag string) (result build.ListString, err error)
	DeleteFolder(ctx context.Context, organization string, project string, pathParameter string) (result autorest.Response, err error)
	DeleteTemplate(ctx context.Context, organization string, project string, templateID string) (result autorest.Response, err error)
	GetArtifact(ctx context.Context, organization string, project string, buildID int32, artifactName string) (result build.Artifact, err error)
	GetArtifacts(ctx context.Context, organization string, project string, buildID int32) (result build.ListArtifact, err error)
	GetAttachment(ctx context.Context, organization string, project string, buildID int32, timelineID uuid.UUID, recordID uuid.UUID, typeParameter string, name string) (result build.String, err error)
	GetAttachments(ctx context.Context, organization string, project string, buildID int32, typeParameter string) (result build.ListAttachment, err error)
	GetBadge(ctx context.Context, organization string, project uuid.UUID, definitionID int32, branchName string) (result build.String, err error)
	GetBuild(ctx context.Context, organization string, project string, buildID int32, propertyFilters string) (result build.Model, err error)
	GetBuildBadge(ctx context.Context, organization string, project string, repoType string, repoID string, branchName string) (result build.String, err error)
	GetBuildChanges(ctx context.Context, organization string, project string, buildID int32, continuationToken string, top *int32, includeSourceChange *bool) (result build.ListChange, err error)
	GetBuildController(ctx context.Context, organization string, controllerID int32) (result build.Controller, err error)
	GetBuildControllers(ctx context.Context, organization string, name string) (result build.ListController, err error)
	GetBuildLog(ctx context.Context, organization string, project string, buildID int32, logID int32, startLine *int64, endLine *int64) (result build.String, err error)
	GetBuildLogs(ctx context.Context, organization string, project string, buildID int32) (result build.ListLog, err error)
	GetBuildOptionDefinitions(ctx context.Context, organization string, project string) (result build.ListOptionDefinition, err error)
	GetBuildProperties(ctx context.Context, organization string, project string, buildID int32, filter string) (result build.PropertiesCollection, err error)
	GetBuildReport(ctx context.Context, organization string, project string, buildID int32, typeParameter string) (result build.ReportMetadata, err error)
	GetBuilds(ctx context.Context, organization string, project string, definitions string, queues string, buildNumber string, minTime *date.Time, maxTime *date.Time, requestedFor string, reasonFilter build.Reason, statusFilter build.Status, resultFilter build.Result, tagFilters string, properties string, top *int32, continuationToken string, maxBuildsPerDefinition *int32, deletedFilter build.QueryDeletedOption, queryOrder build.QueryOrder, branchName string, buildIds string, repositoryID string, repositoryType string) (result build.ListModel, err error)
	GetBuildSettings(ctx context.Context, organization string, project string) (result build.Settings, err error)
	GetBuildTags(ctx context.Context, organization string, project string, buildID int32) (result build.ListString, err error)
	GetBuildTimeline(ctx context.Context, organization string, project string, buildID int32, timelineID uuid.UUID, changeID *int32, planID *uuid.UUID) (result build.Timeline, err error)
	GetBuildWorkItemsRefs(ctx context.Context, organization string, project string, buildID int32, top *int32) (result build.ListResourceRef, err error)
	GetBuildWorkItemsRefsFromCommits(ctx context.Context, organization string, body []string, project string, buildID int32, top *int32) (result build.ListResourceRef, err error)
	GetChangesBetweenBuilds(ctx context.Context, organization string, project string, fromBuildID *int32, toBuildID *int32, top *int32) (result build.ListChange, err error)
	GetDefinition(ctx context.Context, organization string, project string, definitionID int32, revision *int32, minMetricsTime *date.Time, propertyFilters string, includeLatestBuilds *bool) (result build.Definition, err error)
	GetDefinitionMetrics(ctx context.Context, organization string, project string, definitionID int32, minMetricsTime *date.Time) (result build.ListMetric, err error)
	GetDefinitionProperties(ctx context.Context, organization string, project string, definitionID int32, filter string) (result build.PropertiesCollection, err error)
	GetDefinitionResources(ctx context.Context, organization string, project string, definitionID int32) (result build.ListDefinitionResourceReference, err error)
	GetDefinitionRevisions(ctx context.Context, organization string, project string, definitionID int32) (result build.ListDefinitionRevision, err error)
	GetDefinitions(ctx context.Context, organization string, project string, name string, repositoryID string, repositoryType string, queryOrder build.DefinitionQueryOrder, top *int32, continuationToken string, minMetricsTime *date.Time, definitionIds string, pathParameter string, builtAfter *date.Time, notBuiltAfter *date.Time, includeAllProperties *bool, includeLatestBuilds *bool, taskIDFilter *uuid.UUID, processType *int32, yamlFilename string) (result build.ListDefinitionReferenceType, err error)
	GetDefinitionTags(ctx context.Context, organization string, project string, definitionID int32, revision *int32) (result build.ListString, err error)
	GetFile(ctx context.Context, organization string, project string, buildID int32, artifactName string, fileID string, fileName string) (result build.String, err error)
	GetFileContents(ctx context.Context, organization string, project string, providerName string, serviceEndpointID *uuid.UUID, repository string, commitOrBranch string, pathParameter string) (result build.String, err error)
	GetFolders(ctx context.Context, organization string, project string, pathParameter string, queryOrder build.FolderQueryOrder) (result build.ListFolder, err error)
	GetLatestBuild(ctx context.Context, organization string, project string, definition string, branchName string) (result build.Model, err error)
	GetPathContents(ctx context.Context, organization string, project string, providerName string, serviceEndpointID *uuid.UUID, repository string, commitOrBranch string, pathParameter string) (result build.ListSourceRepositoryItem, err error)
	GetProjectMetrics(ctx context.Context, organization string, project string, metricAggregationType string, minMetricsTime *date.Time) (result build.ListMetric, err error)
	GetProjectResources(ctx context.Context, organization string, project string, typeParameter string, ID string) (result build.ListDefinitionResourceReference, err error)
	GetPullRequest(ctx context.Context, organization string, project string, providerName string, pullRequestID string, repositoryID string, serviceEndpointID *uuid.UUID) (result build.PullRequest, err error)
	GetResourceUsage(ctx context.Context, organization string) (result build.ResourceUsage, err error)
	GetStatusBadge(ctx context.Context, organization string, project string, definition string, branchName string, stageName string, jobName string, configuration string, label string) (result build.String, err error)
	GetTags(ctx context.Context, organization string, project string) (result build.ListString, err error)
	GetTemplate(ctx context.Context, organization string, project string, templateID string) (result build.DefinitionTemplate, err error)
	GetTemplates(ctx context.Context, organization string, project string) (result build.ListDefinitionTemplate, err error)
	GetWorkItemsBetweenBuilds(ctx context.Context, organization string, project string, fromBuildID int32, toBuildID int32, top *int32) (result build.ListResourceRef, err error)
	ListBranches(ctx context.Context, organization string, project string, providerName string, serviceEndpointID *uuid.UUID, repository string) (result build.ListString, err error)
	ListRepositories(ctx context.Context, organization string, project string, providerName string, serviceEndpointID *uuid.UUID, repository string, resultSet build.ResultSet, pageResults *bool, continuationToken string) (result build.SourceRepositories, err error)
	ListSourceProviders(ctx context.Context, organization string, project string) (result build.ListSourceProviderAttributes, err error)
	ListWebhooks(ctx context.Context, organization string, project string, providerName string, serviceEndpointID *uuid.UUID, repository string) (result build.ListRepositoryWebhook, err error)
	QueueBuild(ctx context.Context, organization string, body build.Model, project string, ignoreWarnings *bool, checkInTicket string, sourceBuildID *int32) (result build.Model, err error)
	RestoreDefinition(ctx context.Context, organization string, project string, definitionID int32, deleted bool) (result build.Definition, err error)
	RestoreWebhooks(ctx context.Context, organization string, body []string, project string, providerName string, serviceEndpointID *uuid.UUID, repository string) (result autorest.Response, err error)
	SaveTemplate(ctx context.Context, organization string, body build.DefinitionTemplate, project string, templateID string) (result build.DefinitionTemplate, err error)
	UpdateBuild(ctx context.Context, organization string, body build.Model, project string, buildID int32, retry *bool) (result build.Model, err error)
	UpdateBuildProperties(ctx context.Context, organization string, body interface{}, project string, buildID int32) (result build.PropertiesCollection, err error)
	UpdateBuilds(ctx context.Context, organization string, body []build.Model, project string) (result build.ListModel, err error)
	UpdateBuildSettings(ctx context.Context, organization string, body build.Settings, project string) (result build.Settings, err error)
	UpdateDefinition(ctx context.Context, organization string, body build.Definition, project string, definitionID int32, secretsSourceDefinitionID *int32, secretsSourceDefinitionRevision *int32) (result build.Definition, err error)
	UpdateDefinitionProperties(ctx context.Context, organization string, body interface{}, project string, definitionID int32) (result build.PropertiesCollection, err error)
	UpdateFolder(ctx context.Context, organization string, body build.Folder, project string, pathParameter string) (result build.Folder, err error)
}

var _ BaseClientAPI = (*build.BaseClient)(nil)
